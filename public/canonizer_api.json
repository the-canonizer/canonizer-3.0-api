{
    "openapi": "3.0.0",
    "info": {
        "title": "Canonizer API",
        "description": "This documentation is the canonizer version 3 API",
        "termsOfService": "http://canonizer.com/termsandservice",
        "contact": {
            "email": "support@canonizer.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.canonizer.com/api/v3/",
            "description": "Canonizer API"
        }
    ],
    "paths": {
        "/add_nick_name": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add New nick name",
                "description": "",
                "operationId": "addNickName",
                "requestBody": {
                    "description": "Unique nickname required with max 50 characters",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "nick_name": {
                                        "type": "string"
                                    },
                                    "visibility_status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/update_nick_name": {
            "post": {
                "tags": [
                    "nickname"
                ],
                "summary": "update nick name visibility status",
                "description": "",
                "operationId": "updatenickName",
                "requestBody": {
                    "description": "Unique nickname required with max 50 characters",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "visibility_status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Update successfully"
                    }
                }
            }
        },
        "/get_all_nickname": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of all the nicknames",
                "description": "Get list of nicknames",
                "operationId": "getAllNickNames",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This is used to register the user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First Name of the User",
                                        "type": "string"
                                    },
                                    "middle_name": {
                                        "description": "Middle Name of the User",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last Name of the User",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email Id of the User",
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "description": "Phone Number of the User",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password of the User",
                                        "type": "string"
                                    },
                                    "confirm_password": {
                                        "description": "Confirm password string",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "Something went wrong"
                    },
                    "401": {
                        "description": "Unauthorised request"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logout the user",
                "description": "",
                "operationId": "logoutUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user nick name",
                "description": "",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/verifyOtp": {
            "delete": {
                "tags": [
                    "postVerifyOtp"
                ],
                "summary": "post Verify Otp",
                "description": "This use to verify user Otp.",
                "operationId": "verifyOtp",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "NickName": {
                "title": "NickName Schema to return for API's",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "owner_code": {
                        "type": "string"
                    },
                    "nick_name": {
                        "type": "string"
                    },
                    "create_time": {
                        "type": "integer"
                    },
                    "private": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ExceptionRes": {
                "title": "Exception Response of the API's",
                "properties": {
                    "status_code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Schema to return for API's",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "middle_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "address_1": {
                        "type": "string"
                    },
                    "address_2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "mobile_carrier": {
                        "type": "string"
                    },
                    "mobile_verified": {
                        "type": "boolean"
                    },
                    "update_time": {
                        "type": "integer"
                    },
                    "join_time": {
                        "type": "integer"
                    },
                    "language": {
                        "type": "string"
                    },
                    "birthday": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    }
}