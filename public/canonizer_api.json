{
    "openapi": "3.0.0",
    "info": {
        "title": "Account Setting API",
        "version": "1.0.0"
    },
    "paths": {
        "/camp/save": {
            "post": {
                "tags": [
                    "Camp"
                ],
                "summary": "save camp",
                "description": "This API is use for save camp",
                "operationId": "campSave",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "camp_name": {
                                        "type": "string"
                                    },
                                    "parent_camp_num": {
                                        "type": "string"
                                    },
                                    "topic_num": {
                                        "type": "string"
                                    },
                                    "nick_name": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    },
                                    "key_words": {
                                        "type": "string"
                                    },
                                    "camp_about_url": {
                                        "type": "string"
                                    },
                                    "camp_about_nick_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgotpassword/sendOtp": {
            "post": {
                "tags": [
                    "Forgot Password"
                ],
                "summary": "forgot password send Otp",
                "description": "This api used to forgot password send Otp",
                "operationId": "forgotPassword",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User Email Id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgotpassword/verifyOtp": {
            "post": {
                "tags": [
                    "Forgot Password"
                ],
                "summary": "forgot password verify Otp",
                "description": "This api used to forgot password verify Otp",
                "operationId": "forgotPasswordVerifyOtp",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgotpassword/update": {
            "post": {
                "tags": [
                    "Forgot Password"
                ],
                "summary": "forgot password update",
                "description": "This api used to forgot password update",
                "operationId": "forgotPasswordupdate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "type": "string"
                                    },
                                    "confirm_password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/add-nick-name": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add New nick name",
                "description": "",
                "operationId": "addNickName",
                "requestBody": {
                    "description": "Unique nickname required with max 50 characters",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "nick_name": {
                                        "type": "string"
                                    },
                                    "visibility_status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "200": {
                        "description": "success"
                    }
                }
            }
        },
        "/update-nick-name": {
            "post": {
                "tags": [
                    "nickname"
                ],
                "summary": "update nick name visibility status",
                "description": "",
                "operationId": "updatenickName",
                "requestBody": {
                    "description": "Unique nickname required with max 50 characters",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "visibility_status": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Update successfully"
                    }
                }
            }
        },
        "/get-nick-name-list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get list of all the nicknames",
                "description": "Get list of nicknames",
                "operationId": "getAllNickNames",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/change-password": {
            "post": {
                "tags": [
                    "changepassword"
                ],
                "summary": "Update Password",
                "description": "This is used to update the user password.",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "current_password",
                        "in": "query",
                        "description": "The current password of logged in user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "new_password",
                        "in": "query",
                        "description": "The new password of logged in user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "confirm_password",
                        "in": "query",
                        "description": "The confirm password same as new password of logged in user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated successfully"
                    },
                    "400": {
                        "description": "Error"
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "tags": [
                    "profile"
                ],
                "summary": "Get looged in user profile",
                "description": "",
                "operationId": "userProfile",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "404": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/get-direct-supported-camps": {
            "get": {
                "tags": [
                    "support"
                ],
                "summary": "Get list of all the direct supported camps",
                "description": "Get list of all the direct supported camps",
                "operationId": "directSupport",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/get-delegate-supported-camps": {
            "get": {
                "tags": [
                    "support"
                ],
                "summary": "Get list of all the direct supported camps",
                "description": "Get list of all the direct supported camps",
                "operationId": "delegateSupport",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/topic/save": {
            "post": {
                "tags": [
                    "Topic"
                ],
                "summary": "save topic",
                "description": "This is use for save topic",
                "operationId": "topicSave",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "topic_name": {
                                        "type": "string"
                                    },
                                    "namespace": {
                                        "type": "string"
                                    },
                                    "nick_name": {
                                        "type": "string"
                                    },
                                    "note": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/client_token": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "This api used to get password client id and client secrect",
                "description": "",
                "operationId": "clienttoken",
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create user API",
                "description": "This is used to register the user.",
                "operationId": "createUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "middle_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    },
                                    "country_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Logout the user",
                "description": "",
                "operationId": "logoutUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by user nick name",
                "description": "",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/verifyOtp": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "For verify Otp after login details",
                "description": "This api used to verify Otp after login details",
                "operationId": "verifyOtp",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/social/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "For get social token url",
                "description": "This api used to create social token url and we are using this url for generating code",
                "operationId": "usersociallogin",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "provider": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/social/callback": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "For get social user details",
                "description": "This api used to get social social users detauls and auth details",
                "operationId": "usersocialcallback",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "password"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    },
                                    "provider": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Exception Throwable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/country/list": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "For get country list",
                "description": "This api used to get country list",
                "operationId": "countrylist",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/reSendOtp": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Resend Otp",
                "description": "This api used to Resend Otp",
                "operationId": "userReSend",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer {access-token}",
                        "required": true,
                        "schema": {
                            "type": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request Body Json Parameter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/ExceptionRes"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "NickName": {
                "title": "NickName Schema to return for API's",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "owner_code": {
                        "type": "string"
                    },
                    "nick_name": {
                        "type": "string"
                    },
                    "create_time": {
                        "type": "integer"
                    },
                    "private": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ExceptionRes": {
                "title": "Exception Response of the API's",
                "properties": {
                    "status_code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User Schema to return for API's",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "middle_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "address_1": {
                        "type": "string"
                    },
                    "address_2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "mobile_carrier": {
                        "type": "string"
                    },
                    "mobile_verified": {
                        "type": "boolean"
                    },
                    "update_time": {
                        "type": "integer"
                    },
                    "join_time": {
                        "type": "integer"
                    },
                    "language": {
                        "type": "string"
                    },
                    "birthday": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    }
}